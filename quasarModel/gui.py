import os.path
import PySimpleGUI as sg
import matplotlib.pyplot as plt
from matplotlib.backends.backend_tkagg import FigureCanvasTkAgg
import gauss
from source_model import SourceModel, SourceModelAnalytical
from numpy.fft import fft2, fftshift
from tkinter.filedialog import asksaveasfile
from PIL import ImageGrab
import keyboard
import _thread
from tools import set_logger, check_if_test_source, get_image_from_path
from constants import stars, icon_path
import numpy as np
import logging
import shutil


class SourceModelGui:
    set = {'chosen_file': '', 'style': 'inferno', 'new_run': False, 'num_comp': 0, 'running': False, 'stop': False}
    sg.theme('GrayGrayGray')
    real_source = SourceModel()
    analytical_source = SourceModelAnalytical()
    original_image = None
    modelled_image = None
    analytical_fourier_transform = None
    right_click_menu = [[], ['Save log', 'Save images', 'About', 'Exit']]
    load_symb = b''

    def initialize(self):
        file_browse = [sg.T(""), sg.Text("Choose a file: "), sg.Input("", key="FILE_NAME",
                                                                      background_color="white", size=(30, 0)),
                       sg.FileBrowse(key="-IN-"), sg.Button("Run", key="RUN"), sg.Button("Stop", key="STOP"),
                       sg.Checkbox("Analytical expression", key="analytical", default=False),
                       sg.Image(data=self.load_symb, enable_events=True, key='-GIF-IMAGE-',
                                visible=False)
                       ]

        plots = [[sg.Canvas(key="figCanvas1")]]

        analytical_settings = [sg.T(""),
                               sg.Text("Number of components: ", key="anl_set", enable_events=True, visible=False),
                               sg.Combo([i+1 for i in range(5)], key="num_comp", enable_events=True, visible=False,
                                        size=(3, 1), default_value=0)
                               ]

        settings_column = [file_browse, analytical_settings]

        display_column = plots

        menu = [['&Application', ['&Exit', '&Save log', '&Save images']],
                ['&Help', ['&About']]]

        layout = [[sg.MenubarCustom(menu)],
                  [sg.Column(settings_column, element_justification='left', vertical_alignment='t', key='settings'),
                   sg.Column(display_column, element_justification='right')]
                  ]

        return layout

    def inp(self, num_comp):
        inputs = []
        for i in range(num_comp):
            inputs.append([sg.T(f"#{i+1}", key=f'tnum{i}', visible=False, enable_events=True),
                           sg.Text("Amplitude", key=f'tamp{i}', visible=False, enable_events=True),
                           sg.Input("", size=(7, 1), key=f'amp{i}',  visible=False, enable_events=True),
                           sg.Text("X0", key=f'tx0{i}',  visible=False, enable_events=True),
                           sg.Input("", size=(7, 1), key=f'x0{i}',  visible=False, enable_events=True),
                           sg.Text("Y0", key=f'ty0{i}', visible=False, enable_events=True),
                           sg.Input("", size=(7, 1), key=f'y0{i}', visible=False, enable_events=True),
                           sg.Text("Sig_X", key=f'tsigx{i}', visible=False, enable_events=True),
                           sg.Input("", size=(7, 1), key=f'sig_x{i}', visible=False, enable_events=True),
                           sg.Text("Sig_Y", key=f'tsigy{i}', visible=False, enable_events=True),
                           sg.Input("", size=(7, 1), key=f'sig_y{i}', visible=False, enable_events=True),
                           sg.Text("Theta", key=f'ttheta{i}', visible=False, enable_events=True),
                           sg.Input("", size=(7, 1), key=f'theta{i}', visible=False, enable_events=True)])
            inputs.append([sg.T("")])
        return inputs

    def draw_figure(self, canvas, figure):
        figure_canvas_agg = FigureCanvasTkAgg(figure, canvas)
        figure_canvas_agg.draw()
        figure_canvas_agg.get_tk_widget().pack(side='right', fill='both', expand=1)
        return figure_canvas_agg

    def make_figs(self, org, mdl, anl):
        fig = plt.figure(1, figsize=(10, 10))
        ax = plt.gca()
        ax.cla()

        to_plot = [org, mdl, abs(fftshift(fft2(org))), abs(fftshift(fft2(mdl))), org-mdl, abs(anl)]
        titles = ['Original Image', 'Modelled Image', 'FFT of Original Image', 'FFT of Modelled Image', 'Residual',
                  'Analytical Fourier Transform']

        for i, plot, title in zip(range(1, 7), to_plot, titles):
            plt.subplot(int(f'32{i}'))
            ax = plt.gca()
            ax.cla()
            plt.imshow(plot, cmap=self.set['style'])
            ax.invert_yaxis()
            plt.colorbar()
            plt.title(f'{title}')

        plt.subplots_adjust(hspace=0.4, top=0.95)

        # Instead of plt.show
        fig.canvas.draw()

    def update_window(self, values, window):
        window["LOG"].Update(text_color='black')
        window["FILE_NAME"].Update(value=values["-IN-"])

        if self.set['new_run']:
            self.make_figs(self.original_image, self.modelled_image, self.analytical_fourier_transform)
            window['-GIF-IMAGE-'].Update(visible=False)
            self.set['new_run'] = False
            self.set['running'] = False

    def run_model(self, image, source):
        self.original_image, self.modelled_image, self.analytical_fourier_transform, _ = source.process(image)
        self.set['new_run'] = True

    def initialize_img(self, window):
        blank = np.zeros((100, 100))
        fig = plt.figure(1, figsize=(10, 10))
        for i in range(1, 7):
            plt.subplot(int(f'32{i}'))
            plt.imshow(blank, cmap=self.set['style'])
            plt.gca().invert_yaxis()
            plt.colorbar()

        plt.subplots_adjust(hspace=0.4, top=0.95)

        self.draw_figure(window['figCanvas1'].TKCanvas, fig)

    def save_element_as_file(self, element, filename):
        """
        Saves any element as an image file.  Element needs to have an underlyiong Widget available (almost if not all of them do)
        :param element: The element to save
        :param filename: The filename to save to. The extension of the filename determines the format (jpg, png, gif, ?)
        """
        widget = element.Widget
        box = (widget.winfo_rootx(), widget.winfo_rooty(), widget.winfo_rootx() + widget.winfo_width(),
               widget.winfo_rooty() + widget.winfo_height())
        grab = ImageGrab.grab(bbox=box)
        grab.save(filename)

    def change_inp_par(self, visibility, num, window):
        names = ['tnum', 'tamp', 'amp', 'tx0', 'x0', 'ty0', 'y0', 'tsigx', 'sig_x', 'tsigy', 'sig_y', 'ttheta', 'theta']
        for i in range(num):
            for name in names:
                window[f'{name}{i}'].Update(visible=visibility)

    def run_gui(self):
        window = sg.Window('Model sources', self.initialize(), resizable=True, finalize=True,
                           grab_anywhere=True, right_click_menu=self.right_click_menu,
                           icon=icon_path, return_keyboard_events=True)
        self.initialize_img(window)
        comps = self.inp(5)
        window.extend_layout(window['settings'], comps)
        log = [sg.T(""),
               sg.Multiline(key="LOG", background_color="white", size=(120, 50), expand_x=True, expand_y=True,
                            justification='bottom', write_only=True, reroute_stdout=True, reroute_stderr=True,
                            echo_stdout_stderr=True, autoscroll=True, auto_refresh=True, do_not_clear=False,
                            font=('Helvetica', 11), text_color='black')]
        window.extend_layout(window['settings'], [log])
        window.Maximize()
        set_logger(log_path='QuasarModelLog', console=True)
        logger = logging.getLogger('QuasarModelLog')

        while True:
            event, values = window.read(timeout=100)

            if event == sg.WIN_CLOSED:
                break

            if (event == "RUN" and not values["analytical"]) or (keyboard.is_pressed('enter') and not values["analytical"]):
                self.set['stop'] = False
                self.real_source.stop = False
                chosen_file = values["FILE_NAME"]
                chosen_file = check_if_test_source(chosen_file)
                image = get_image_from_path(chosen_file)

                if not os.path.isfile(chosen_file):
                    logger.info(f'{stars}INVALID FILE{stars}\n')
                    continue

                _thread.start_new_thread(self.run_model, (image, self.real_source))

                self.set['running'] = True
                window['-GIF-IMAGE-'].Update(visible=True)

            if (event == "RUN" and values["analytical"]) or (keyboard.is_pressed('enter') and values["analytical"]):
                self.set['stop'] = False
                self.analytical_source.stop = False

                gauss_vec = gauss.GaussList()

                try:
                    for i in range(int(values['num_comp'])):
                        gauss_vec.append(gauss.Gaussian(amp=float(values[f'amp{i}']),
                                                        x0=int(values[f'x0{i}']),
                                                        y0=int(values[f'y0{i}']),
                                                        a=1/float(values[f'sig_x{i}'])**2,
                                                        b=1/float(values[f'sig_y{i}'])**2,
                                                        theta=float(np.radians(float(values[f'theta{i}'])))))
                except ValueError:
                    logger.info(f'{stars}INVALID INPUT{stars}\n')
                    continue

                image = gauss_vec.build_image()
                self.analytical_source = SourceModelAnalytical()
                self.analytical_source.gauss_vec = gauss_vec
                _thread.start_new_thread(self.run_model, (image, self.analytical_source))

                self.set['running'] = True
                window['-GIF-IMAGE-'].Update(visible=True)

            if values["analytical"]:
                window['anl_set'].Update(visible=True)
                self.set['num_comp'] = values['num_comp']
                window['num_comp'].Update(visible=True)
                window['settings'].Update()

            if not values["analytical"]:
                window['anl_set'].Update(visible=False)
                window['num_comp'].Update(visible=False)
                self.change_inp_par(False, 5, window)

            if event == 'num_comp':
                self.change_inp_par(False, 5, window)  # erase all existing input elements first
                self.change_inp_par(True, int(values['num_comp']), window)  # then display the chosen number of input elements

            if event == 'About':
                sg.popup(f"{'':<100}{'Model quasars as gaussians':<50} \n",
                         'Choose a .fits file by clicking on [Browse]. Then run the model by pressing [Run] or hit ENTER on keyboard.                                            ',
                         'Model analytical gaussians by checking the [Analytical expression] box and enter input parameters. Then press [Run] or hit ENTER on keyboard.',
                         'Please note that the grid for modelling analytical sources is 256x256, meaning offsets outside of the grid will not work.',
                         'Example of analytical input parameters: \n',
                         'Amp: 120',
                         'X0: 128',
                         'Y0: 135',
                         'Sig_x: 9.3',
                         'Sig_y: 14.8',
                         'theta: 45\n',
                         'There are seven fits-files already included in the program. To model one of these enter a number between 1-7 in the [Choose a file] box and hit [Run] or ENTER.',
                         'Description of included sources: \n',
                         '1: One oval source which is a bit smeared. \n ',
                         '2: One small oval source with no tilt. \n ',
                         '3: One thin oval tilted source \n',
                         '4: One a bit thicker oval tilted source \n',
                         '5: One small oval tilted source \n',
                         '6: One tilted oval and a bit noisy source \n',
                         '7: Two sources \n',
                         'Program developed by Tuss Anzelius & Ludvig Rodung as part of a summer internship at NVI, Inc. \n',
                         keep_on_top=True, icon=icon_path,
                         grab_anywhere=True, title='Model quasars as gaussians', modal=True, line_width=500,
                         font=('Helvetica', 11))
            if event == 'Exit':
                break

            if event == 'Save log':
                file = asksaveasfile(initialfile='Untitled.txt',
                                     defaultextension=".txt", filetypes=[("All Files", "*.*"),
                                                                         ("Text Documents", "*.txt")])
                try:
                    shutil.copy('QuasarModelLog', file.name)
                except AttributeError:
                    pass  # if user closes the browse before choosing a place to save their file

            if event == 'Save images':
                file = asksaveasfile(initialfile='Untitled.jpg',
                                     defaultextension=".jpg", filetypes=[("All Files", "*.*"),
                                                                         ("Text Documents", "*.txt")])
                try:
                    self.save_element_as_file(window['figCanvas1'], file.name)
                except AttributeError:
                    pass  # if user closes the browse before choosing a place to save their file

            if self.set['running']:
                window['-GIF-IMAGE-'].update_animation(self.load_symb, time_between_frames=100)
                self.update_window(values, window)

            if event == 'STOP':
                self.real_source.stop = True
                self.analytical_source.stop = True
                self.set['stop'] = True
                self.set['running'] = False
                window['-GIF-IMAGE-'].Update(visible=False)

        window.close()
